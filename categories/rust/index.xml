<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Rust on Hello Hugo</title>
    <link>https://junfff.github.io/categories/rust/</link>
    <description>Recent content in Rust on Hello Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>james922@163.com (James)</managingEditor>
    <webMaster>james922@163.com (James)</webMaster>
    <copyright>©2023, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 23 Feb 2021 10:41:22 +0800</lastBuildDate>
    
        <atom:link href="https://junfff.github.io/categories/rust/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Rust::mio</title>
        <link>https://junfff.github.io/posts/rust/2021-02-23-rust-mio-epoll/</link>
        <pubDate>Tue, 23 Feb 2021 10:41:22 +0800</pubDate>
        <author>james922@163.com (James)</author>
        <atom:modified>Tue, 23 Feb 2021 10:41:22 +0800</atom:modified>
        <guid>https://junfff.github.io/posts/rust/2021-02-23-rust-mio-epoll/</guid>
        <description>Flavors: from url: https://blog.csdn.net/s_lisheng/article/details/80593426 【Rust】轻量级I/O库mio 让我思考一下 2018-06-06 12:53:45 4054 收藏 3 分类专栏： Rust 文章标签： Rust mio 版权 mio是rust实现的一个轻量级的I/O库。其</description>
        
        <dc:creator>James</dc:creator>
        
        
        
        
          
            
              <category>Rust</category>
            
          
        
        
          
            
              <category>Rust</category>
            
          
        
        
      </item>
      
      <item>
        <title>Rust::Channels</title>
        <link>https://junfff.github.io/posts/rust/2020-12-27-rust-channels/</link>
        <pubDate>Sun, 27 Dec 2020 23:46:22 +0800</pubDate>
        <author>james922@163.com (James)</author>
        <atom:modified>Sun, 27 Dec 2020 23:46:22 +0800</atom:modified>
        <guid>https://junfff.github.io/posts/rust/2020-12-27-rust-channels/</guid>
        <description>Flavors: Synchronous channels: Channel where send() can block. Limited capacity. Mutex + Condvar + VecDeque Atomic VecDeque (atomic queue) + thread::pack + thread::Thread::notify Asynchronous channels: Channel where send() cannot block. Unbounded. Mutex + Condvar + VecDeque Mutex + Condvar + LinkedList AtomicLinkedList or Atomic Queue Atomic linked list, linked list of T Atomic block linked list, linked of atomic VecDeque Rendezvous channels: Synchronous with capacity = 0. Used for thread synchronization.</description>
        
        <dc:creator>James</dc:creator>
        
        
        
        
          
            
              <category>Rust</category>
            
          
        
        
          
            
              <category>Rust</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
